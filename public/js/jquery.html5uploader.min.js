/**
 * jQuery HTML5 Uploader
 * @Uri       https://github.com/MicheleBertoli/jquery-html5-uploader
 * [以上為原始的 javaScript 檔案，這邊調整比較有感的 UI / UX 設定]
 * @Author    Boday
 * @DateTime  2017-11-02T16:01:10+0800
 */
(function($) {

    $.fn.html5Uploader = function(options) {

        var crlf = '\r\n';
        var boundary = "i_love_boday";
        var dashes = "--";

        var settings = {
            'name': 'uploadedFile',
            'postUrl': 'Upload.php',
            'max': 5,
            'maxMessage': '最多只能上傳 %s 張，請重新上傳',
            'dragDropBox': null,
            'dragDropBoxHeight': 80,
            'onClientAbort': null,
            'onClientError': null,
            'onClientLoad': null,
            'onClientLoadEnd': null,
            'onClientLoadStart': null,
            'onClientProgress': null,
            'onServerAbort': null,
            'onServerError': null,
            'onServerLoad': null,
            'onServerLoadStart': null,
            'onServerProgress': null,
            'onServerReadyStateChange': null,
            'onSuccess': null
        };

        if (options) {

            if (options.dragDropBox) {
                if (options.dragDropBox.querySelector('.drag_drop_img_list') == null) {
                    var imgList = document.createElement('ul');
                    imgList.setAttribute('class', 'drag_drop_img_list');
                    options.dragDropBox.append(imgList);
                }
            }

            $.extend(settings, options);

            // 上傳圖檔
            var onUploadedFile = function(files) {
                if (files.length > settings.max) {
                    alert(settings.maxMessage.replace(/%s/, settings.max));
                    return;
                }
                for (var i = 0; i < files.length; i++) {
                    fileHandler(files[i]);
                }
            };
        }

        return this.each(function(options) {
            var $this = $(this);
            if ($this.is("[type='file']")) {
                $this
                    .bind("change", function() {
                        var files = this.files;
                        onUploadedFile(files);
                    });
            } else {
                $this
                    .bind("dragenter dragover", function() {
                        $(this).addClass("hover");
                        return false;
                    })
                    .bind("dragleave", function() {
                        $(this).removeClass("hover");
                        return false;
                    })
                    .bind("drop", function(e) {
                        $(this).removeClass("hover");
                        var files = e.originalEvent.dataTransfer.files;
                        onUploadedFile(files);
                        return false;
                    });
            }
        });

        function createUUID() {
            var dt = new Date().getTime();
            var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                var r = (dt + Math.random() * 16) % 16 | 0;
                dt = Math.floor(dt / 16);
                return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);
            });
            return uuid;
        }

        function getImageElementsItem(id, src, height) {
            var imageItem = document.createElement('li');
            imageItem.setAttribute('id', id);
            imageItem.setAttribute('data-content', '0');
            var Images = document.createElement('img');
            Images.setAttribute('src', src);
            Images.setAttribute('height', height);
            imageItem.append(Images);
            var Mask = document.createElement('div');
            Mask.setAttribute('class', 'drag_drop_img_mask');
            imageItem.append(Mask);
            return imageItem;
        }

        function fileHandler(file) {
            var fileReader = new FileReader();
            fileReader.onabort = function(e) {
                if (settings.onClientAbort) {
                    settings.onClientAbort(e, file);
                }
            };
            fileReader.onerror = function(e) {
                if (settings.onClientError) {
                    settings.onClientError(e, file);
                }
            };
            fileReader.onload = function(e) {
                // 如果有拖放盒子
                if (settings.dragDropBox) {
                    var uuid = createUUID();
                    file.id = uuid;
                    var Item = getImageElementsItem(uuid, e.target.result, settings.dragDropBoxHeight);
                    $(settings.dragDropBox).find('.drag_drop_img_list').append(Item);
                }

                if (settings.onClientLoad) {
                    settings.onClientLoad(e, file);
                }
            };
            fileReader.onloadend = function(e) {
                if (settings.onClientLoadEnd) {
                    settings.onClientLoadEnd(e, file);
                }
            };
            fileReader.onloadstart = function(e) {
                if (settings.onClientLoadStart) {
                    settings.onClientLoadStart(e, file);
                }
            };
            fileReader.onprogress = function(e) {
                if (settings.onClientProgress) {
                    settings.onClientProgress(e, file);
                }
            };
            fileReader.readAsDataURL(file);

            var xmlHttpRequest = new XMLHttpRequest();
            xmlHttpRequest.upload.onabort = function(e) {
                if (settings.onServerAbort) {
                    settings.onServerAbort(e, file);
                }
            };
            xmlHttpRequest.upload.onerror = function(e) {
                if (settings.onServerError) {
                    settings.onServerError(e, file);
                }
            };
            xmlHttpRequest.upload.onload = function(e) {
                if (settings.onServerLoad) {
                    settings.onServerLoad(e, file);
                }
            };
            xmlHttpRequest.upload.onloadstart = function(e) {
                if (settings.onServerLoadStart) {
                    settings.onServerLoadStart(e, file);
                }
            };
            xmlHttpRequest.upload.onprogress = function(e) {
                // 如果有拖放盒子
                if (settings.dragDropBox && file.id && e.lengthComputable) {
                    var nowPercent = e.loaded / e.total * 100;
                    $('#' + file.id).find('.drag_drop_img_mask').css('bottom', nowPercent + '%');
                }
                if (settings.onServerProgress) {
                    settings.onServerProgress(e, file);
                }
            };
            xmlHttpRequest.onreadystatechange = function(e) {
                if (settings.onServerReadyStateChange) {
                    settings.onServerReadyStateChange(e, file, xmlHttpRequest.readyState);
                }
                if (settings.onSuccess && xmlHttpRequest.readyState == 4 && xmlHttpRequest.status == 200) {
                    settings.onSuccess(e, file, xmlHttpRequest.responseText);
                }
            };
            xmlHttpRequest.open("POST", settings.postUrl, true);

            // Add Laravel FrameWrok CSRF-TOKEN
            xmlHttpRequest.setRequestHeader('X-CSRF-TOKEN',
                document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            );
            xmlHttpRequest.setRequestHeader('X-AJAX', true);
            if (file.getAsBinary) { // Firefox

                var data = dashes + boundary + crlf +
                    "Content-Disposition: form-data;" +
                    "name=\"" + settings.name + "\";" +
                    "route-name=\"" + settings.parameter.route_name + "\";" +
                    "id=\"" + settings.parameter.id + "\";" +
                    "vimeo_id=\"" + settings.parameter.vimeo_id + "\";" +
                    "filename=\"" + unescape(encodeURIComponent(file.name)) + "\"" + crlf +
                    "Content-Type: application/octet-stream" + crlf + crlf +
                    file.getAsBinary() + crlf +
                    dashes + boundary + dashes;

                xmlHttpRequest.setRequestHeader("Content-Type", "multipart/form-data;boundary=" + boundary);
                xmlHttpRequest.sendAsBinary(data);

            } else if (window.FormData) { // Chrome

                var formData = new FormData();
                formData.append(settings.name, file);
                formData.append('route-name', settings.parameter.route_name);
                formData.append('id', settings.parameter.id);
                formData.append('vimeo_id', settings.parameter.vimeo_id);

                xmlHttpRequest.send(formData);

            }
        }

    };

})(jQuery);
